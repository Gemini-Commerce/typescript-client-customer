{
  "swagger": "2.0",
  "info": {
    "title": "CDP Service",
    "version": "v1",
    "contact": {
      "name": "Gemini Team",
      "email": "info@gemini-commerce.com"
    },
    "license": {
      "name": "Gemini fair use license",
      "url": "https://gemini-commerce.com/api/fair-use-license"
    }
  },
  "host": "cdp.api.gogemini.io",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/customer.Customer/AcquireSubscriber": {
      "post": {
        "operationId": "Customer_AcquireSubscriber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerSubscriberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerCreateSubscriberRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/AcquireUnsubscriber": {
      "post": {
        "operationId": "Customer_AcquireUnsubscriber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerUnsubscribeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUnsubscribeRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/AddCustomerToGroup": {
      "post": {
        "operationId": "Customer_AddCustomerToGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerAddCustomerToGroupRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/BulkUpdate": {
      "post": {
        "operationId": "Customer_BulkUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerBulkUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerBulkUpdateRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/Create": {
      "post": {
        "operationId": "Customer_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerCreateRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/CreateAddress": {
      "post": {
        "operationId": "Customer_CreateAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerAddressCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerAddressCreateRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/CreateGroup": {
      "post": {
        "operationId": "Customer_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerCreateGroupRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/CreateSubscriber": {
      "post": {
        "operationId": "Customer_CreateSubscriber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerSubscriberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerCreateSubscriberRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/DeleteAddress": {
      "post": {
        "operationId": "Customer_DeleteAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerAddressDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerAddressDeleteRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/DeleteGroup": {
      "post": {
        "operationId": "Customer_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerDeleteGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerDeleteGroupRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/Find": {
      "post": {
        "operationId": "Customer_Find",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerFindManyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerFindManyRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/FindByEmail": {
      "post": {
        "operationId": "Customer_FindByEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerFindByEmailRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/FindById": {
      "post": {
        "operationId": "Customer_FindById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerFindByIdRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/FindSubscriberByEmail": {
      "post": {
        "operationId": "Customer_FindSubscriberByEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerSubscriberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerFindSubscriberByEmailRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/FindSubscriberById": {
      "post": {
        "operationId": "Customer_FindSubscriberById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerSubscriberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerFindSubscriberByIdRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/GetGroupByCode": {
      "post": {
        "operationId": "Customer_GetGroupByCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerGetGroupByCodeRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/GetGroupById": {
      "post": {
        "operationId": "Customer_GetGroupById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerGetGroupByIdRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/GrantPermissions": {
      "post": {
        "summary": "GrantPermissions add permissions to a customer",
        "operationId": "Customer_GrantPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerGrantPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerGrantPermissionsRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/ListCustomers": {
      "post": {
        "operationId": "Customer_ListCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerListCustomersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerListCustomersRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/ListGroups": {
      "post": {
        "operationId": "Customer_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerListGroupsRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/RemoveCustomerFromGroup": {
      "post": {
        "operationId": "Customer_RemoveCustomerFromGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerRemoveCustomerFromGroupRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/RemoveDefaultAddress": {
      "post": {
        "operationId": "Customer_RemoveDefaultAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerRemoveDefaultAddressRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/RevokePermissions": {
      "post": {
        "summary": "RevokePermissions remove permissions from a customer",
        "operationId": "Customer_RevokePermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerRevokePermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerRevokePermissionsRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/Search": {
      "post": {
        "operationId": "Customer_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerSearchRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/SetDefaultAddress": {
      "post": {
        "operationId": "Customer_SetDefaultAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerSetDefaultAddressRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/SetPermissions": {
      "post": {
        "summary": "SetPermissions set permissions to a customer",
        "operationId": "Customer_SetPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerSetPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerSetPermissionsRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/Unsubscribe": {
      "post": {
        "operationId": "Customer_Unsubscribe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerUnsubscribeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUnsubscribeRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/Update": {
      "post": {
        "operationId": "Customer_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerCustomerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/UpdateAddress": {
      "post": {
        "operationId": "Customer_UpdateAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerAddressUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerAddressUpdateRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/UpdateGroup": {
      "post": {
        "operationId": "Customer_UpdateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateGroupRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer.Customer/UpdateSubscriber": {
      "post": {
        "operationId": "Customer_UpdateSubscriber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerSubscriberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateSubscriberRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    }
  },
  "definitions": {
    "BulkUpdateRequestAction": {
      "type": "string",
      "enum": [
        "ENABLE",
        "DISABLE",
        "DELETE"
      ],
      "default": "ENABLE"
    },
    "ListCustomersRequestFilterDate": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PasswordPasswordType": {
      "type": "string",
      "enum": [
        "PASSWORD_TYPE_UNKNOWN",
        "PASSWORD_TYPE_MAGENTO1",
        "PASSWORD_TYPE_SYLIUS",
        "PASSWORD_TYPE_MAGENTO2"
      ],
      "default": "PASSWORD_TYPE_UNKNOWN"
    },
    "customerAddCustomerToGroupRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        }
      }
    },
    "customerAddressCreateRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "em": {
          "$ref": "#/definitions/customerEMFields"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "fiscalCode": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/customerAddressCreateRequestKind"
        },
        "default": {
          "type": "boolean"
        },
        "country": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "customerAddressCreateRequestKind": {
      "type": "string",
      "enum": [
        "SHIPPING",
        "BILLING",
        "BOTH"
      ],
      "default": "SHIPPING"
    },
    "customerAddressCustomerResponse": {
      "type": "object",
      "properties": {
        "em": {
          "$ref": "#/definitions/customerEMFields"
        },
        "grn": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "fiscalCode": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/customerAddressCustomerResponseKind"
        },
        "default": {
          "type": "boolean"
        },
        "country": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "customerAddressCustomerResponseKind": {
      "type": "string",
      "enum": [
        "SHIPPING",
        "BILLING",
        "BOTH"
      ],
      "default": "SHIPPING"
    },
    "customerAddressDeleteRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "addressId": {
          "type": "string"
        }
      }
    },
    "customerAddressDeleteResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customerCustomerResponse"
        }
      }
    },
    "customerAddressEntity": {
      "type": "object",
      "properties": {
        "em": {
          "$ref": "#/definitions/customerEMFields"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "fiscalCode": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/customerAddressEntityKind"
        },
        "default": {
          "type": "boolean"
        },
        "country": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "customerAddressEntityKind": {
      "type": "string",
      "enum": [
        "SHIPPING",
        "BILLING",
        "BOTH"
      ],
      "default": "SHIPPING"
    },
    "customerAddressUpdateRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/customerAddressEntity"
        },
        "fieldMask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerAddressUpdateResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customerCustomerResponse"
        }
      }
    },
    "customerBulkUpdateRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "customerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "$ref": "#/definitions/BulkUpdateRequestAction"
        }
      }
    },
    "customerBulkUpdateResponse": {
      "type": "object",
      "properties": {
        "customerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerCreateGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "customerCreateRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "em": {
          "$ref": "#/definitions/customerEMFields"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthdate": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerAddressEntity"
          }
        },
        "phoneNumber": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deleted": {
          "type": "boolean"
        },
        "newsletters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerNewsletterRequest"
          }
        },
        "doNotNotify": {
          "type": "boolean"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "migratedPassword": {
          "$ref": "#/definitions/customerPassword"
        },
        "market": {
          "type": "string"
        },
        "preferredLocale": {
          "type": "string"
        },
        "taxCode": {
          "type": "string"
        },
        "certifiedEmail": {
          "type": "string"
        },
        "externalIds": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "customerCreateSubscriberRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "subscriber": {
          "$ref": "#/definitions/customerSubscriberRequest"
        }
      }
    },
    "customerCustomerResponse": {
      "type": "object",
      "properties": {
        "em": {
          "$ref": "#/definitions/customerEMFields"
        },
        "grn": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthdate": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerAddressCustomerResponse"
          }
        },
        "defaultBillingAddressId": {
          "type": "string"
        },
        "defaultShippingAddressId": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "preferredLocale": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "newsletters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerNewsletterResponse"
          }
        },
        "migratedPassword": {
          "$ref": "#/definitions/customerPassword"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "taxCode": {
          "type": "string"
        },
        "certifiedEmail": {
          "type": "string"
        },
        "market": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerPermission"
          },
          "title": "Permissions is a list of permissions that the customer has"
        },
        "externalIds": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "customerDeleteGroupRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        }
      }
    },
    "customerDeleteGroupResponse": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        }
      }
    },
    "customerEMFields": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "entityCode": {
          "type": "string"
        }
      }
    },
    "customerFindByEmailRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "customerFindByIdRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "customerFindManyRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "pageToken": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/customerFindManyRequestFilter"
        },
        "filterMask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerFindManyRequestFilter": {
      "type": "object",
      "properties": {
        "newsletter": {
          "type": "boolean"
        }
      }
    },
    "customerFindManyResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerCustomerResponse"
          }
        },
        "nextPageToken": {
          "type": "string"
        }
      }
    },
    "customerFindSubscriberByEmailRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "subscriberEmail": {
          "type": "string"
        }
      }
    },
    "customerFindSubscriberByIdRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "subscriberId": {
          "type": "string"
        }
      }
    },
    "customerGetGroupByCodeRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "customerGetGroupByIdRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        }
      }
    },
    "customerGrantPermissionsRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "The tenant ID of the customer to grant permissions to"
        },
        "customerId": {
          "type": "string",
          "title": "The customer ID of the customer to grant permissions to"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerPermission"
          },
          "title": "The permissions to grant"
        }
      },
      "title": "GrantPermissionsRequest is the request message for the GrantPermissions RPC"
    },
    "customerGrantPermissionsResponse": {
      "type": "object",
      "title": "GrantPermissionsResponse is the response message for the GrantPermissions RPC"
    },
    "customerGroupResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "customerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "grn": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "customerCount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "customerListCustomersRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "pageToken": {
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/customerListCustomersRequestFilter"
        },
        "filterMask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerListCustomersRequestFilter": {
      "type": "object",
      "properties": {
        "genders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListCustomersRequestFilterDate"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerListCustomersResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerCustomerResponse"
          }
        },
        "nextPageToken": {
          "type": "string"
        }
      }
    },
    "customerListGroupsRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        }
      }
    },
    "customerListGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerGroupResponse"
          }
        }
      }
    },
    "customerNewsletterRequest": {
      "type": "object",
      "properties": {
        "newsletterGrn": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "subscribed": {
          "type": "boolean"
        }
      }
    },
    "customerNewsletterResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "newsletterGrn": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "customerPassword": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/PasswordPasswordType"
        }
      }
    },
    "customerPermission": {
      "type": "string",
      "enum": [
        "PERMISSION_UNKNOWN",
        "PERMISSION_LOGIN",
        "PERMISSION_BUY"
      ],
      "default": "PERMISSION_UNKNOWN"
    },
    "customerRemoveCustomerFromGroupRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        }
      }
    },
    "customerRemoveDefaultAddressRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "addressId": {
          "type": "string"
        }
      }
    },
    "customerRevokePermissionsRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "The tenant ID of the customer to revoke permissions from"
        },
        "customerId": {
          "type": "string",
          "title": "The customer ID of the customer to revoke permissions from"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerPermission"
          },
          "title": "The permissions to revoke"
        }
      },
      "title": "RevokePermissionsRequest is the request message for the RevokePermissions RPC"
    },
    "customerRevokePermissionsResponse": {
      "type": "object",
      "title": "RevokePermissionsResponse is the response message for the RevokePermissions RPC"
    },
    "customerSearchRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "pageToken": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/customerSearchRequestFilter"
        },
        "filterMask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerSearchRequestFilter": {
      "type": "object",
      "properties": {
        "newsletter": {
          "type": "boolean"
        }
      }
    },
    "customerSearchResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerCustomerResponse"
          }
        },
        "nextPageToken": {
          "type": "string"
        }
      }
    },
    "customerSetDefaultAddressRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "addressId": {
          "type": "string"
        }
      }
    },
    "customerSetPermissionsRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "title": "The tenant ID of the customer to set permissions to"
        },
        "customerId": {
          "type": "string",
          "title": "The customer ID of the customer to set permissions to"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerPermission"
          },
          "title": "The permissions to set"
        }
      },
      "title": "SetPermissionsRequest is the request message for set permissions RPC"
    },
    "customerSetPermissionsResponse": {
      "type": "object",
      "title": "SetPermissionsResponse is the response message for set permissions RPC"
    },
    "customerSubscriberRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "birthdate": {
          "type": "string",
          "format": "date-time"
        },
        "nationality": {
          "type": "string"
        },
        "em": {
          "$ref": "#/definitions/customerEMFields"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "newsletters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerNewsletterRequest"
          }
        },
        "market": {
          "type": "string"
        },
        "preferredLocale": {
          "type": "string"
        }
      }
    },
    "customerSubscriberResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "birthdate": {
          "type": "string",
          "format": "date-time"
        },
        "nationality": {
          "type": "string"
        },
        "em": {
          "$ref": "#/definitions/customerEMFields"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "newsletters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerNewsletterResponse"
          }
        },
        "market": {
          "type": "string"
        },
        "preferredLocale": {
          "type": "string"
        },
        "customerGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerSubscriberResponseWithNewsletterRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "birthdate": {
          "type": "string",
          "format": "date-time"
        },
        "nationality": {
          "type": "string"
        },
        "em": {
          "$ref": "#/definitions/customerEMFields"
        },
        "preferredLocale": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "newsletters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerNewsletterRequest"
          }
        }
      }
    },
    "customerUnsubscribeRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "newsletterGrn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerUnsubscribeResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "boolean"
        },
        "subscriberExist": {
          "type": "boolean"
        },
        "activeNewsletterGrn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerUpdateGroupRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/customerUpdateGroupRequestPayload"
        },
        "fieldMask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerUpdateGroupRequestPayload": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "customerUpdateRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/customerUpdateRequestPayload"
        },
        "fieldMask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customerUpdateRequestPayload": {
      "type": "object",
      "properties": {
        "em": {
          "$ref": "#/definitions/customerEMFields"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthdate": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerAddressEntity"
          }
        },
        "defaultBillingAddressId": {
          "type": "string"
        },
        "defaultShippingAddressId": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deleted": {
          "type": "boolean"
        },
        "newsletters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerNewsletterRequest"
          }
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "migratedPassword": {
          "$ref": "#/definitions/customerPassword"
        },
        "preferredLocale": {
          "type": "string"
        },
        "taxCode": {
          "type": "string"
        },
        "certifiedEmail": {
          "type": "string"
        },
        "market": {
          "type": "string"
        },
        "externalIds": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "customerUpdateSubscriberRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "subscriber": {
          "$ref": "#/definitions/customerSubscriberResponseWithNewsletterRequest"
        },
        "fieldMask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    }
  },
  "securityDefinitions": {
    "standardAuthorization": {
      "type": "oauth2",
      "name": "Authorization",
      "in": "header",
      "flow": "implicit"
    }
  }
}
